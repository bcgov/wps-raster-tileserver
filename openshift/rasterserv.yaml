apiVersion: template.openshift.io/v1
kind: Template
metadata:
  name: raster-tileserver
parameters:
  - name: RASTER_TILESERV_IMAGE_TAG
    value: "latest"
  - name: IMAGE_REGISTRY
    value: image-registry.apps.silver.devops.gov.bc.ca
  - name: IMAGE_NAMESPACE
    value: e1e498-tools
  - name: HOST
    value: wps-dev-raster-tileserver.apps.silver.devops.gov.bc.ca
  - name: GLOBAL_NAME
    description: Name of global Module
    value: wps-global

objects:
  # pgtileserv: 7800
  # varnish: 8080
  # outside: 80
  - apiVersion: v1
    kind: DeploymentConfig
    metadata:
      labels:
        app: raster-tileserver
      name: raster-tileserver
    spec:
      # TODO: use some kind of smart autoscaling?
      replicas: 20
      selector:
        app: raster-tileserver
      strategy:
        type: Rolling
      template:
        metadata:
          labels:
            app: raster-tileserver
            name: raster-tileserver
        spec:
          containers:
            - name: nginx
              image: ${IMAGE_REGISTRY}/${IMAGE_NAMESPACE}/nginx-raster-tilecache
              imagePullPolicy: Always
              readinessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                httpGet:
                  path: /health
                  port: 8080
                timeoutSeconds: 1
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 10
                successThreshold: 1
                httpGet:
                  path: /health
                  port: 8080
                timeoutSeconds: 1
              ports:
                - containerPort: 8080
                  protocol: TCP
              resources:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  cpu: 50m
                  memory: 256Mi
            - name: raster-tileserver
              image: ${IMAGE_REGISTRY}/${IMAGE_NAMESPACE}/wps-raster-tileserver:${RASTER_TILESERV_IMAGE_TAG}
              ports:
                - containerPort: 7800
                  protocol: TCP
              env:
                - name: ORIGINS
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: env.origins
                - name: AWS_VIRTUAL_HOSTING
                  value: "FALSE"
                - name: AWS_S3_ENDPOINT
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-server
                - name: AWS_ACCESS_KEY_ID
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-user-id
                - name: AWS_SECRET_ACCESS_KEY
                  valueFrom:
                    secretKeyRef:
                      name: ${GLOBAL_NAME}
                      key: object-store-secret
                - name: REDIS_HOST
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: env.redis-host
                - name: REDIS_PORT
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: env.redis-port
                - name: REDIS_USE
                  valueFrom:
                    configMapKeyRef:
                      name: ${GLOBAL_NAME}
                      key: env.redis-use
                - name: REDIS_PASSWORD
                  valueFrom:
                    secretKeyRef:
                      name: wps-redis
                      key: database-password
              livenessProbe:
                failureThreshold: 3
                initialDelaySeconds: 5
                periodSeconds: 20
                successThreshold: 1
                tcpSocket:
                  port: 7800
                timeoutSeconds: 5
              readinessProbe:
                httpGet:
                  path: /
                  port: 7800
                failureThreshold: 3
                initialDelaySeconds: 10
                periodSeconds: 20
                successThreshold: 1
                timeoutSeconds: 5
              resources:
                requests:
                  cpu: 50m
                  memory: 128Mi
                limits:
                  # Limit of 50 is too low. The worker times out starting up.
                  # Limit of 100 seems too slow?
                  cpu: 200m
                  # Limit of 128 seems to cause OOM?
                  # Limit of 256 seems to cause not available?
                  memory: 512Mi
  - apiVersion: v1
    kind: Service
    metadata:
      name: raster-tileserver
      labels:
        app: raster-tileserver
        name: raster-tileserver
    spec:
      ports:
        - name: 8080-tcp
          protocol: TCP
          port: 80
          targetPort: 8080
      selector:
        name: raster-tileserver
  - apiVersion: route.openshift.io/v1
    kind: Route
    metadata:
      name: raster-tileserver
      labels:
        app: raster-tileserver
        name: raster-tileserver
      annotations:
        # Use roundrobin load balancing strategy
        haproxy.router.openshift.io/balance: roundrobin
        haproxy.router.openshift.io/disable_cookies: "true"
    spec:
      host: ${HOST}
      port:
        targetPort: 8080-tcp
      to:
        kind: Service
        name: raster-tileserver
      tls:
        termination: edge
        insecureEdgeTerminationPolicy: Redirect
